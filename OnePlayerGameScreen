package com.example.rps;

import java.util.ArrayList;
import java.util.Random;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.database.Cursor;
import android.os.Bundle;
import android.speech.RecognizerIntent;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;

public class GamePlayScreen extends Activity{
	
	static final int check =1111;
	static final String rock = "rock";
	static final String scissor = "scissors";
	static final String paper = "paper";
	static final String won = "won";
	static final String lost = "lost";
	static final String[] possibles = {"rock", "paper", "scissors"};
	String name;
	Context cntxt = this;
	Button play;
	Button score;
	String disp;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_game_play_screen);
		
		name = getIntent().getStringExtra("user");
		disp = getIntent().getStringExtra("Welcome");
		
		TextView txtlabel = (TextView)findViewById(R.id.textlabl);
		txtlabel.setText(disp + " " + name);
		
		play = (Button)findViewById(R.id.play);
		play.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				Intent i = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
				i.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, RecognizerIntent.LANGUAGE_MODEL_FREE_FORM);
				startActivityForResult(i, check);
				
			}
		});
		
		score = (Button)findViewById(R.id.score);
		score.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View va) {
				// TODO Auto-generated method stub
				DatabaseOperations DBP = new DatabaseOperations(cntxt);
				
				Cursor cursor = DBP.retSpcfInfo(DBP, name);
				cursor.moveToFirst();
				int show_win = cursor.getInt(0);
				int show_loss = cursor.getInt(1);
				
				Toast.makeText(getApplicationContext(), "Won = "+ show_win + " and lost = " + show_loss, Toast.LENGTH_SHORT).show();
				
			}
		});
		
	}
	
	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		String send = "";
		DatabaseOperations DOP = new DatabaseOperations(cntxt);
		
		if(requestCode == check && resultCode == RESULT_OK){
			ArrayList<String> results = data.getStringArrayListExtra(RecognizerIntent.EXTRA_RESULTS);
			boolean check = false;
			if( results.contains(rock)){
				send = rock;
				check = true;
			}else if (results.contains(paper)){
				send = paper;
				check = true;
			}else if (results.contains(scissor)){
				send = scissor;
				check = true;
			}
			
			int win_cnt = 0;
			int los_cnt = 0;
			
			if (check == false){
				Toast.makeText(getApplicationContext(), "please try again", Toast.LENGTH_SHORT).show();
			}else{
				String winorloss = "";
				try{
					Cursor cursor = DOP.retSpcfInfo(DOP, name);
					cursor.moveToFirst();
					win_cnt = cursor.getInt(0);
					los_cnt = cursor.getInt(1);
				}catch (Exception ex){
					Log.d("Error", ex.getMessage());
				}

				
				Random r = new Random();
				int rand = r.nextInt(2) + 0;
				
				winorloss = detwinner(send.toString(), possibles[rand].toString());
				
				DatabaseOperations DP = new DatabaseOperations(cntxt);
				
				if (winorloss.equals(won)){
					win_cnt = win_cnt + 1;
					DP.updateWinInfo(DP, name, win_cnt);
					
				}else if (winorloss.equals(lost)){
					los_cnt = los_cnt + 1;
					DP.updateLossInfo(DP, name, los_cnt);
				}
				
				Toast.makeText(getApplicationContext(), "You " + winorloss + "!!!--->Computer input was " + possibles[rand].toString(), Toast.LENGTH_SHORT).show();
			}
		}
		
		super.onActivityResult(requestCode, resultCode, data);
		
	}
	
	private String detwinner(String user_input, String comp_input){
		String win_lost = "";
		
		if (user_input.equals(rock) && comp_input.equals(scissor)){
			win_lost = "won";
		}
		if (user_input.equals(rock) && comp_input.equals(paper)){
			win_lost = "lost";
		}
		if (user_input.equals(scissor) && comp_input.equals(rock)){
			win_lost = "lost";
		}
		if (user_input.equals(scissor) && comp_input.equals(paper)){
			win_lost = "won";
		}
		if (user_input.equals(paper) && comp_input.equals(rock)){
			win_lost = "won";
		}
		if (user_input.equals(paper) && comp_input.equals(scissor)){
			win_lost = "lost";
		}
		if (user_input.equals(comp_input)){
			win_lost = "draw";
		}
		
		return win_lost;
		
	}
	
}
